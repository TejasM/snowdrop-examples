<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-guide-usecases">
  <title>Understanding the application structure</title>

  <para>This chapter describes the business use cases covered by the
  application, and how is the functionality distributed across the
  modules.</para>

  <section>
    <title>The application structure and its use cases</title>

    <para>The Sportsclub example consists of three different applications
    sharing the same domain model, packaged and deployed together. This is
    done for simplicity reasons, but also for demonstrating a few different
    technologies and configuration options working side by side. </para>

    <para>The application supports the following scenarios:<itemizedlist>
        <listitem>
          <para>maintaining informations about the subscribers, creating new
          subcriptions and closing existing accounts;</para>
        </listitem>

        <listitem>
          <para>creating, modifying and removing equipment reservations for
          subscribers;</para>
        </listitem>

        <listitem>
          <para>viewing the current balance of an account, issuing invoices
          for accounts that do not have a current invoice and updating the
          account whenever a payment has been received.</para>
        </listitem>
      </itemizedlist></para>

    <para>Each of these scenarios is covered by a separate web application,
    and all three applications are packaged in a single EAR file.</para>

    <para>Figure 2.1 shows how the application is structured:</para>

    <figure>
      <title>Structure of the Sportsclub application</title>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/application-modules.png" scale="80%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>All three applications share a common domain model and a common
    DAO/repository layer, implemented using Spring. The application includes
    both Hibernate and JPA implementations for the repository layer (using the
    Hibernate and JPA support provided by JBoss AS, respectively). The
    application is built in two different variants, each using one of the two
    DAO implementation alternatives. </para>

    <para>Apart from that, each web application uses a different combination
    of technologies, illustrating one or more integration use cases.</para>

    <para>The Subscriptions application uses an EJB-based service layer and a
    JSF-based front-end, using Richfaces components. </para>

    <para>The Reservations application uses a Spring-based business layer and
    a JSF-based front-end, also using Richfaces components.</para>

    <para>The Invoicing application uses an EJB service layer and a Spring
    MVC-based front-end (using JSP and Spring form tags). Apart from that, it
    demonstrates the creation of JAX-WS based web services injected with
    Spring beans, JCA-based Spring JMS integration, auditing by using the
    Spring AOP configuration and Spring JMX integration.</para>
  </section>

  <section>
    <title>A comparative look of the project modules</title>

    <para>All the modules (Maven artifacts) of the project, as well as the
    functionality that they cover are outlined in the following table:<table>
        <title>Modules of the Sportsclub project</title>

        <tgroup cols="3">
          <colspec colname="module-name" />

          <colspec colname="module-description" />

          <colspec align="center" colname="module-type" />

          <thead>
            <row>
              <entry align="center">Maven Module</entry>

              <entry align="center">Functionality</entry>

              <entry>Module Type</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>snowdrop-domain</entry>

              <entry>Domain classes and repository interfaces.</entry>

              <entry>jar</entry>
            </row>

            <row>
              <entry>sportsclub-hibernate-dao</entry>

              <entry>Hibernate implementations for repositories and Spring
              bean definitions using them.</entry>

              <entry>jar</entry>
            </row>

            <row>
              <entry>sportsclub-jpa-dao</entry>

              <entry>JPA implementations for repositories and Spring bean
              definitions using them.</entry>

              <entry>jar</entry>
            </row>

            <row>
              <entry>sportsclub-invoicing-ejb</entry>

              <entry>Business logic for the Invoicing application</entry>

              <entrytbl cols="1">
                <tbody>
                  <row>
                    <entry>ejb</entry>
                  </row>
                </tbody>
              </entrytbl>
            </row>

            <row>
              <entry>sportsclub-reservations-spring</entry>

              <entry>Business logic for the Reservations application</entry>

              <entry>jar</entry>
            </row>

            <row>
              <entry>sportsclub-subscriptions-ejb</entry>

              <entry>Business logic for the Subscriptions application</entry>

              <entry>ejb</entry>
            </row>

            <row>
              <entry>sportsclub-invoicing-webmvc</entry>

              <entry>UI layer for the Invoicing application. Includes
              processing of JMS messages via Spring (for payment
              notifications)</entry>

              <entry>war</entry>
            </row>

            <row>
              <entry>sportsclub-reservations-web</entry>

              <entry>UI layer for the Reservations application.</entry>

              <entry>war</entry>
            </row>

            <row>
              <entry>sportsclub-subscriptions-web</entry>

              <entry>UI layer for the Subscriptions application</entry>

              <entry>war</entry>
            </row>

            <row>
              <entry>sportsclub-ear</entry>

              <entry>EAR aggregator module using the Hibernate-based
              implementation</entry>

              <entry>ear</entry>
            </row>

            <row>
              <entry>sportsclub-jpa-ear</entry>

              <entry>EAR aggregator module using the JPA-based
              implementation</entry>

              <entry>ear</entry>
            </row>

            <row>
              <entry>sportsclub-staticwebcontent</entry>

              <entry>Static web content for the application (not deployed
              separately, but included at build-time in the web
              layers)</entry>

              <entry>war</entry>
            </row>

            <row>
              <entry>sportsclub-test-infrastructure</entry>

              <entry>Infrastructure module for unit testing</entry>

              <entry>jar</entry>
            </row>
          </tbody>
        </tgroup>
      </table></para>

    <section>
      <para />
    </section>
  </section>
</chapter>
